@import "../../../../styles/variables";

.filter-content-container {
    background-color: $color-white;
    border: $standard-border-width solid $standard-border-color;
    border-top: 0;
    font-size: $font-size-0;
    line-height: $line-height-0;
    max-height: $filter-content-max-height;

    .filter-action-bar {
        position: relative;
        display: flex;
        padding: $base-spacing * 2;
        height: $button-height-sm;

        .filter-action-buttons {
            button {
                margin: 0;
                width: $button-width-xs;
                height: $button-height-sm;

                &:first-child {
                    margin-right: $base-spacing;
                }
            }

            position: absolute;
            right: $base-spacing * 2;
        }

        .filter-action {
            min-width: $min-card-width;
            width: calc(100% - #{$button-width-xs} * 2 - #{$base-spacing} * 2);
        }

        .filter-value {
            display: flex;
            justify-content: space-between;
            font-size: $font-size-2;
        }
    }

    ::-webkit-scrollbar {
        width: $scroll-width;
    }

    ::-webkit-scrollbar-track {
        background: $color-grey-4;
        border-left: $color-white solid ($scroll-width - $scroll-track-width - $scroll-track-thumb-width);
        border-right: $color-white solid $scroll-track-thumb-width;
    }

    ::-webkit-scrollbar-thumb {
        background: $color-accent;
        border-right: $color-white solid ($scroll-width - $scroll-track-thumb-width);
    }

    .filter-content {
        width: 100%;
        max-height: $filter-content-max-height - $base-spacing * 4 - $button-height-sm;
        overflow-y: auto;

        .filter-result-list {
            margin: 0;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax($min-card-width, 1fr));
            grid-gap: $base-spacing * 2;
            list-style: none;

            &:first-child {
                padding-top: 0;
            }
        }

        .filter-no-result {
            padding: $base-spacing * 2;
        }
    }
}

.category-filter-container {
    display: inline-flex;
    width: 100%;
    padding-bottom: 2 * $base-spacing;
    // grid-template-columns: repeat(auto-fit, minmax($min-card-width-with-border, $min-card-width-with-border));
    // grid-gap: $base-spacing;

    .tree-checkbox-container {
        width: 30%;
        min-width: $min-card-width-with-border;
        padding-left: $base-spacing * 2;
        padding-right: $base-spacing * 2;
        display: block;

        &:first-child {
            border-right: $standard-border-width solid $standard-border-color;
        }

        &:nth-child(2) {
            border-right: $standard-border-width solid $standard-border-color;
        }

        &:last-child {
            border-right: 0 !important;
        }

        .tree-checkbox {
            display: flex;
            position: relative;
            padding-bottom: 2 * $base-spacing;

            &:last-child {
                padding-bottom: 0;
            }
        }

        .tree-checkbox-children-container {
            padding-left: 4 * $base-spacing;
        }
    }

    .link-button {
        right: 0;
        position: absolute;
    }
}

.search-filter-input-container {
    width: 50%;
    max-width: $min-card-width * 2;
    min-width: $min-card-width - 5 * $base-spacing;

    .search-filter-input {
        background-color: transparent;
        outline: none;
        border: 0;
        padding: $base-spacing 0;
        margin-left: $base-spacing;
    }

    border: $standard-border-width solid $standard-border-color;
    padding: 0 $base-spacing;
    height: $button-height-sm;
    display: flex;
    vertical-align: middle;
}

.rc-slider-track {
    background-color: $color-accent !important;
}

.rc-slider-handle {
    border-color: $color-accent !important;
}
